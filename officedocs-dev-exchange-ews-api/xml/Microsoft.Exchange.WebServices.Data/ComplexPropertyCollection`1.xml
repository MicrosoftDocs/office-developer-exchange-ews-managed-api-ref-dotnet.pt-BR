<Type Name="ComplexPropertyCollection&lt;TComplexProperty&gt;" FullName="Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection&lt;TComplexProperty&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da975912edfea8574acf7deb8cf5b57e10da26b7" />
    <Meta Name="ms.sourcegitcommit" Value="f9542e83f8de0b81ad3168ccc4bf48004e4e2e94" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20622034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComplexPropertyCollection&lt;TComplexProperty&gt; : Microsoft.Exchange.WebServices.Data.ComplexProperty, System.Collections.Generic.IEnumerable&lt;TComplexProperty&gt; where TComplexProperty : ComplexProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComplexPropertyCollection`1&lt;(class Microsoft.Exchange.WebServices.Data.ComplexProperty) TComplexProperty&gt; extends Microsoft.Exchange.WebServices.Data.ComplexProperty implements class System.Collections.Generic.IEnumerable`1&lt;!TComplexProperty&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexPropertyCollection(Of TComplexProperty)&#xA;Inherits ComplexProperty&#xA;Implements IEnumerable(Of TComplexProperty)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TComplexProperty&gt;&#xA; where TComplexProperty : ComplexPropertypublic ref class ComplexPropertyCollection abstract : Microsoft::Exchange::WebServices::Data::ComplexProperty, System::Collections::Generic::IEnumerable&lt;TComplexProperty&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TComplexProperty">
      <Constraints>
        <BaseTypeName>Microsoft.Exchange.WebServices.Data.ComplexProperty</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Exchange.WebServices.Data.ComplexProperty</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TComplexProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TComplexProperty">
      <span data-ttu-id="7aa05-101">Tipo de ComplexProperty.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aa05-101">ComplexProperty type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7aa05-102">Representa uma coleção de propriedades que podem ser enviadas para e recuperadas de serviços de Web do Exchange (EWS).</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aa05-102">Represents a collection of properties that can be sent to and retrieved from Exchange Web Services (EWS).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (complexProperty As TComplexProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TComplexProperty complexProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexProperty" Type="TComplexProperty" />
      </Parameters>
      <Docs>
        <param name="complexProperty">
          <span data-ttu-id="7aa05-103">A propriedade para localizar na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-103">The property to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa05-104">Determina se uma propriedade específica é na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-104">Determines whether a specific property is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa05-105">True se a propriedade foi encontrada na coleção, false caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-105">True if the property was found in the collection, false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa05-106">Obtém o número total de propriedades na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-106">Gets the total number of properties in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa05-107">O número de propriedades, como um número inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-107">The number of properties, as an integer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TComplexProperty&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TComplexProperty&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TComplexProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TComplexProperty&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa05-108">Obtém um enumerador que itera através dos elementos da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-108">Gets an enumerator that iterates through the elements of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa05-109">Um IEnumerator da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-109">An IEnumerator for the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (TComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!TComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (complexProperty As TComplexProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(TComplexProperty complexProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexProperty" Type="TComplexProperty" />
      </Parameters>
      <Docs>
        <param name="complexProperty">
          <span data-ttu-id="7aa05-110">A propriedade para localizar na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-110">The property to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa05-111">Procura uma propriedade específica e retornar seu índice baseado em zero dentro da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-111">Searches for a specific property and return its zero-based index within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa05-112">O índice baseado em zero da propriedade dentro da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-112">The zero-based index of the property within the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TComplexProperty this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TComplexProperty Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TComplexProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TComplexProperty default[int] { TComplexProperty get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TComplexProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7aa05-113">O índice baseado em zero da propriedade a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-113">The zero-based index of the property to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa05-114">Obtém a propriedade no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-114">Gets the property at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa05-115">A propriedade no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-115">The property at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa05-116">Obtém um enumerador que itera através dos elementos da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-116">Gets an enumerator that iterates through the elements of the collection.</span>
          </span>
          <span data-ttu-id="7aa05-117">O <see cref="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.System#Collections#IEnumerable#GetEnumerator" /> método é aplicável para clientes que visam o Exchange Online e versões do Exchange, começando com o Exchange Server 2013.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-117">The <see cref="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.System#Collections#IEnumerable#GetEnumerator" /> method is applicable for clients that target Exchange Online and versions of Exchange starting with Exchange Server 2013.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa05-118">Um enumerador que itera através dos elementos da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa05-118">An enumerator that iterates through the elements of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>